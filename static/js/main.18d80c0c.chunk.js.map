{"version":3,"sources":["components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","Data.js","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["Player","setCurrentSong","currentSong","isPlaying","setIsPlaying","audioRef","setSongInfo","songInfo","songs","setSongs","activeLibraryHandler","nextPrev","newSongs","map","song","id","active","console","log","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","trackAnim","transform","animationPercentage","getTime","time","Math","floor","slice","className","currentTime","style","background","color","min","max","duration","value","onChange","e","target","type","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","alt","name","src","cover","artist","LibrarySong","songSelectHandler","Library","libraryStatus","chillhop","uuidv4","audio","Nav","setLibraryStatus","faMusic","App","useState","data","useRef","timeUpdateHandler","roundedCurrent","round","roundedDuration","animation","songEndHandler","onTimeUpdate","onLoadedMetadata","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18d80c0c.chunk.js","sourcesContent":["import React from 'react'\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faPlay,\r\n    faAngleLeft,\r\n    faAngleRight,\r\n    faPause,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nexport default function Player({\r\n    setCurrentSong,\r\n    currentSong,\r\n    isPlaying,\r\n    setIsPlaying,\r\n    audioRef,\r\n    setSongInfo,\r\n    songInfo,\r\n    songs,\r\n    setSongs,\r\n}) {\r\n\r\n    const activeLibraryHandler =(nextPrev)=>{\r\n        const newSongs = songs.map((song)=>{\r\n            if(song.id === nextPrev.id){\r\n                return{\r\n                    ...song,\r\n                    active:true,\r\n                };\r\n            }else{\r\n                return{\r\n                    ...song,\r\n                    active:false,\r\n                };\r\n            }          \r\n        })\r\n        setSongs(newSongs); \r\n        console.log('Hello from useEffect');\r\n    }\r\n    \r\n    //Event Handler \r\n    const skipTrackHandler = async (direction)=>{\r\n        let currentIndex = songs.findIndex((song)=>song.id === currentSong.id);\r\n        if(direction === \"skip-forward\"){\r\n          await  setCurrentSong(songs[(currentIndex+1)%songs.length]);\r\n          activeLibraryHandler(songs[(currentIndex+1)%songs.length]);\r\n        }\r\n       if(direction===\"skip-back\"){\r\n           if(((currentIndex-1)%songs.length===-1))\r\n           {\r\n              await setCurrentSong(songs[songs.length-1]);\r\n              activeLibraryHandler(songs[songs.length-1]);\r\n               if(isPlaying) audioRef.current.play();\r\n               return;\r\n           }\r\n         await  setCurrentSong(songs[(currentIndex-1)%songs.length]);\r\n         activeLibraryHandler(songs[(currentIndex-1)%songs.length]);\r\n       }\r\n       if(isPlaying) audioRef.current.play();\r\n       \r\n    };\r\n    //add the style\r\n    const trackAnim = {\r\n        transform:`translateX(${songInfo.animationPercentage}%)`\r\n    }\r\n    const playSongHandler=()=>{\r\n        if(isPlaying){\r\n            audioRef.current.pause();\r\n            setIsPlaying(!isPlaying); \r\n\r\n\r\n        }else{\r\n            audioRef.current.play();\r\n            setIsPlaying(!isPlaying);\r\n\r\n        }\r\n    };\r\n\r\n    const getTime=(time)=>{\r\n        return(\r\n            Math.floor(time /60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n        );\r\n    }\r\n    //state\r\n\r\n    const dragHandler = (e)=>{\r\n        audioRef.current.currentTime=e.target.value;\r\n        setSongInfo({...songInfo, currentTime:e.target.value});\r\n    };\r\n    return (\r\n        <div className=\"player\">\r\n            <div className=\"time-control\">\r\n                <p>{getTime(songInfo.currentTime)}</p>\r\n                <div style={{background:`linear-gradient(to right,${currentSong.color[0]},${currentSong.color[1]})`}} className=\"track\">\r\n                <input \r\n                min={0}\r\n                 max={songInfo.duration || 0} \r\n                 value={songInfo.currentTime} \r\n                 onChange={dragHandler} \r\n                 type=\"range\" \r\n                />\r\n                 <div style={trackAnim} className=\"animate-track\"></div>\r\n                 </div>\r\n                <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\r\n            </div>\r\n            <div className=\"play-control\">\r\n                <FontAwesomeIcon onClick={()=>skipTrackHandler('skip-back')} className=\"skip-back\" size=\"2x\" icon={faAngleLeft}/>\r\n                <FontAwesomeIcon \r\n                onClick={playSongHandler} \r\n                className=\"play\"\r\n                size=\"2x\" \r\n                icon={isPlaying ? faPause : faPlay}/>\r\n                <FontAwesomeIcon  onClick={()=>skipTrackHandler('skip-forward')} className=\"skip-forward\" size=\"2x\" icon={faAngleRight}/>\r\n            </div>\r\n \r\n        </div>\r\n   \r\n    )\r\n}\r\n","\r\nimport React from 'react'\r\n\r\nconst Song =({currentSong,isPlaying})=>\r\n {  \r\n    return(\r\n\r\n        <div className=\"song-container\">\r\n            <img className=\"playerimg\" alt={currentSong.name} src={currentSong.cover}  ></img>\r\n            <h2>{currentSong.name}</h2>\r\n            <h3>{currentSong.artist}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Song;","import React from 'react'\r\n\r\nconst LibrarySong =({song,songs,setCurrentSong,id,audioRef,isPlaying,setSongs})=> {\r\n    const songSelectHandler = async ()=>{\r\n         await setCurrentSong(song); \r\n        const newSongs = songs.map((song)=>{\r\n            if(song.id===id){\r\n                return{\r\n                    ...song,\r\n                    active:true,\r\n                };\r\n            }else{\r\n                return{\r\n                    ...song,\r\n                    active:false,\r\n                };\r\n            }          \r\n        })\r\n        console.log('useEffect libarary Song');     \r\n        setSongs(newSongs); \r\n        //playAudio\r\n        if(isPlaying) audioRef.current.play();\r\n         \r\n    }\r\n    return(\r\n        <div onClick={songSelectHandler} className={`library-song ${song.active? \"selected\" : \"\"}  `}>\r\n            <img alt={song.name} src={song.cover} ></img>\r\n            <div className=\"song-description\">\r\n            <h3>{song.name}</h3>\r\n            <h4>{song.artist}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LibrarySong;","import React from 'react'\r\nimport LibrarySong from './LibrarySong';\r\n\r\nconst Library = ({songs,setCurrentSong,audioRef,isPlaying,setSongs,libraryStatus}) => {\r\n    return (\r\n        <div className={`library ${libraryStatus ? 'active-library':''}`}>\r\n            <h2>Library</h2>\r\n            <div className=\"\">\r\n                {songs.map(song => \r\n                <LibrarySong setSongs={setSongs} isPlaying={isPlaying} key={song.id} id={song.id} songs={songs} setCurrentSong={setCurrentSong} song={song} audioRef={audioRef}/>)}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Library;\r\n","\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction chillhop(){\r\n    return[\r\n        {\r\n            name:\"Cruising\",\r\n            artist:\"Evil Needle\",\r\n            cover:\" https://chillhop.com/wp-content/uploads/2021/04/cb0cc6270d7f2e1bb13e44e8832bd5c9b2a61080-1024x1024.jpg\",\r\n            id:uuidv4(),\r\n            active:true,\r\n            color:['#EC5C4D','#DEA25B'],\r\n            audio:\"https://mp3.chillhop.com/serve.php/?mp3=17088\",\r\n        },\r\n        {\r\n            name:\"Low Rider\",\r\n            artist:\"Evil Needle\",\r\n            cover:\"https://chillhop.com/wp-content/uploads/2021/04/cb0cc6270d7f2e1bb13e44e8832bd5c9b2a61080-1024x1024.jpg\",\r\n            id:uuidv4(),\r\n            active:false,\r\n            color:['#EC5C4D','#DEA25B'],\r\n            audio:\"https://mp3.chillhop.com/serve.php/?mp3=17088\",\r\n        },\r\n        {\r\n            name:\"On The Moon\",\r\n            artist:\"SwuM\",\r\n            cover:\"https://chillhop.com/wp-content/uploads/2021/03/74d62bc9370a68e440c1b98eaf650344f0a7faea-1024x1024.jpg\",\r\n            id:uuidv4(),\r\n            active:false,\r\n            color:['#283430','#513B32'],\r\n            audio:\"https://mp3.chillhop.com/serve.php/?mp3=15237\",\r\n        },\r\n        {\r\n            name:\"Lonely Waves\",\r\n            artist:\"C Y G N\",\r\n            cover:\"https://chillhop.com/wp-content/uploads/2021/02/d12927eedcc2f5afba2ab049a4a1ea46c2266ae3-1024x1024.jpg\",\r\n            id:uuidv4(),\r\n            active:false,\r\n            color:['#B557CF','#0F1232'],\r\n            audio:\"https://mp3.chillhop.com/serve.php/?mp3=14981\",\r\n        },\r\n        {\r\n            name:\"Melodiya\",\r\n            artist:\"Psalm Trees, FloFilz\",\r\n            cover:\"https://chillhop.com/wp-content/uploads/2021/03/75adfe0661d06a9ea66d9c2e99b31e92ae450ebe-1024x1024.jpg\",\r\n            id:uuidv4(),\r\n            active:false,\r\n            color:['#AE8121','#21221C'],\r\n            audio:\"https://mp3.chillhop.com/serve.php/?mp3=16060\",\r\n        },\r\n        {\r\n            name:\"Soul Samba\",\r\n            artist:\"Screen Jazzmaster, Zmeyev\",\r\n            cover:\"https://i1.sndcdn.com/artworks-K4XDKEBlHyZoH8iy-jIEEHw-t500x500.jpg\",\r\n            id:uuidv4(),\r\n            active:false,\r\n            color:['#B9D2CA','#141518'],\r\n            audio:\"https://mp3.chillhop.com/serve.php/?mp3=16063\",\r\n        },\r\n        {\r\n            name:\"Romance\",\r\n            artist:\"RenBoz\",\r\n            cover:\"https://seeded-session-images.scdn.co/v1/img/artist/4EtruNo3qv5ML5tiXQopqT/en\",\r\n            id:uuidv4(),\r\n            active:false,\r\n            color:['#D7648B','#FFFFFF'],\r\n            audio:\"https://mp3.chillhop.com/serve.php/?mp3=16064\",\r\n        },\r\n        {\r\n            name:\"Alyosha\",\r\n            artist:\"Monma, Misha\",\r\n            cover:\"https://scandinaviansoul.com/wp-content/uploads/2019/07/9e2da3b69f12c2eed78f14bf191f9223.jpg\",\r\n            id:uuidv4(),\r\n            active:false,\r\n            color:['#C775FF','##1127E5'],\r\n            audio:\"https://mp3.chillhop.com/serve.php/?mp3=16066\",\r\n        },\r\n\r\n\r\n    ]\r\n}\r\nexport default chillhop;","import React from 'react';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faMusic} from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nexport default function Nav({setLibraryStatus,libraryStatus}) {\r\n    return (\r\n        <nav>\r\n            <h1>LoosenUp</h1>\r\n            <button onClick={()=>setLibraryStatus(!libraryStatus)}>\r\n                Library\r\n                <FontAwesomeIcon icon={faMusic}/>\r\n            </button>\r\n        </nav>\r\n    )\r\n}\r\n","import React, { useState,useRef} from 'react';\n//Adding Components\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\n//import style\nimport './styles/app.scss';\n//import Library\nimport Library from \"./components/Library\";\n//import Util\nimport data from \"./Data\";\n//import nav\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n  //state\n  const [libraryStatus,setLibraryStatus]=useState(false);\n  const [songs,setSongs]=useState(data());\n  const [currentSong,setCurrentSong]=useState(songs[0]);\n  const [isPlaying,setIsPlaying] = useState(false);\n  const audioRef = useRef(null);\n  \n  const [songInfo,setSongInfo] = useState({\n    currentTime:0,\n    duration:0,\n    animationPercentage:0,\n});\nconst timeUpdateHandler = (e)=>{\n  const current = e.target.currentTime;\n  const duration = e.target.duration;\n  //calculate percentage\n  const roundedCurrent = Math.round(current);\n  const roundedDuration = Math.round(duration);\n  const animation= Math.round((roundedCurrent/roundedDuration)*100);\n  console.log(animation);\n  setSongInfo({...songInfo,currentTime:current,duration, animationPercentage:animation,})\n\n\n};\nconst songEndHandler= async ()=>{\n  let currentIndex = songs.findIndex((song)=>song.id === currentSong.id);\n  await  setCurrentSong(songs[(currentIndex+1)%songs.length]);\n  if(isPlaying) audioRef.current.play();\n}\n  return (\n\n    <div className={`App ${libraryStatus ? \"library-active\":\"\"} ${isPlaying ? \"playing-animation\" : \"body\"}`} >\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} />\n      <Player \n      audioRef={audioRef} \n      setIsPlaying={setIsPlaying} \n      isPlaying={isPlaying} \n      currentSong={currentSong} \n      setSongInfo={setSongInfo}\n      songInfo={songInfo}\n      songs={songs}\n      setCurrentSong={setCurrentSong}\n      setSongs={setSongs}\n      />\n\n      <Library libraryStatus={libraryStatus} setSongs={setSongs} audioRef={audioRef} songs={songs} setCurrentSong={setCurrentSong} isPlaying={isPlaying}/>\n      <audio \n            onTimeUpdate={timeUpdateHandler} \n            onLoadedMetadata={timeUpdateHandler}\n            ref={audioRef}\n            src={currentSong.audio}\n            onEnded={songEndHandler}\n            >\n            \n            </audio>\n      </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}